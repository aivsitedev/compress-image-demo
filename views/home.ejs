<!-- views/home.ejs -->
<!DOCTYPE html>
<html>
<head>
    <title>Image Compression Demo with Cognito Auth</title>

    <style type="text/css">
        body {
          background: #20262E;
          padding: 20px;
          font-family: sans-serif;
        }
        #app {
          background: #fff;
          border-radius: 4px;
          padding: 20px;
          transition: all 0.2s;
          text-align: center;
        }
        #logo {
          width: 100px;
        }
        h2 {
          font-weight: bold;
          margin-bottom: 15px;
        }
        h1, h2 {
          font-weight: normal;
          margin-bottom: 15px;
        }
        a {
          color: #42b983;
        }
        img {
          width: 30%;
          margin: auto;
          display: block;
          margin-bottom: 10px;
        }
      </style>
</head>
<body>
<div>
    <% if (isAuthenticated) { %>
        <div id="app">
            <h1>Image Compression Demo with Cognito Auth</h1>
    
            <div>
                <h2>Welcome, <%= userInfo.username || userInfo.email %></h2>
                <p>Here are some attributes you can use as a developer:</p>
                <p><%= JSON.stringify(userInfo, null, 4) %></p>   
            </div>
            <a href="/logout">Logout</a>

        <div v-if="!image">
            <h2>Select an image</h2>
            <input type="file" @change="onFileChange" accept="image/jpeg">
        </div>
        <div v-else>
            <img :src="image" />
            <button v-if="!uploadURL" @click="removeImage">Remove image</button>
            <button v-if="!uploadURL" @click="uploadImage">Upload image</button>
        </div>
        <h2 v-if="uploadURL">Success! Image uploaded to bucket.</h2>
        </div>
        <script src="https://unpkg.com/vue@1.0.28/dist/vue.js"></script>
        <script src="https://unpkg.com/axios@0.2.1/dist/axios.min.js"></script>
        <script>

            let email_address = '<%= userInfo.email %>';
            let gateway_endpoint = '<%= gatewayEndpoint %>';

            const MAX_IMAGE_SIZE = 1000000
            const API_ENDPOINT = `${gateway_endpoint}/?email=${email_address}`;
    
            new Vue({
                el: "#app",
                data: {
                    image: '',
                    uploadURL: ''
                },
                methods: {
                    onFileChange (e) {
                        let files = e.target.files || e.dataTransfer.files
                        if (!files.length) return
                        this.createImage(files[0])
                    },
                    createImage (file) {
                        let reader = new FileReader()
                        reader.onload = (e) => {
                            if (!e.target.result.includes('data:image/jpeg')) {
                                return alert('Wrong file type - JPG only.')
                            }
                            if (e.target.result.length > MAX_IMAGE_SIZE) {
                                return alert('Image is loo large.')
                            }
                            this.image = e.target.result
                        }
                        reader.readAsDataURL(file)
                    },
                    removeImage: function (e) {
                        this.image = ''
                    },
                    uploadImage: async function (e) {
                        try {
                            let access_token = '<%= accessToken %>';
                            
                            const response = await axios({
                                method: 'GET',
                                headers: {
                                    'Authorization': 'Bearer ' + access_token,
                                    'Content-Type': 'application/x-www-form-urlencoded'
                                },
                                url: API_ENDPOINT
                            })

                            let binary = atob(this.image.split(',')[1])
                            let array = []
                            for (var i = 0; i < binary.length; i++) {
                                array.push(binary.charCodeAt(i))
                            }
                            let blobData = new Blob([new Uint8Array(array)], {type: 'image/jpeg'})
                            const result = await fetch(response.uploadURL, {
                                method: 'PUT',
                                body: blobData,
                            })

                            this.uploadURL = response.uploadURL.split('?')[0]
                        } catch (e) {
                            console.log(e);
                        }
                    }
                }
            })
            </script>
    <% } else { %>
        <div id="app">
            <p>Please log in to continue</p>
            <a href="/login">Login</a>
        </div>
    <% } %>
</div>
</body>
</html>